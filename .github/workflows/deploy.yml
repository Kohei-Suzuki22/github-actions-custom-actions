name: Deployment
on:
  push:
    branches:
      - master
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & cache dependencies
        id: load-cache-deps
        # カスタムアクションを使う際もusesを使う。
        # リポジトリ直下からアクションが記載されているファイル「action.yml」までのパスを指定する。
        # ./.github/actions/cached-deps までは指定するが、「action.yml」は指定しなくていい。※ 必ずaction.ymlでカスタムアクションを定義することになっているため。
        uses: ./.github/actions/cached-deps
        with:
          caching: 'false'
      - name: wether the chache is used.
        # カスタムアクション「./.github/actions/cached-deps」のアウトプットを取得している。
        run: echo 'Is the Cache used? -> ${{ steps.load-cache-deps.outputs.used-cache }}'
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & cache dependencies
        # カスタムアクションを使う際もusesを使う。
        # リポジトリ直下からアクションが記載されているファイル「action.yml」までのパスを指定する。
        # ./.github/actions/cached-deps までは指定するが、「action.yml」は指定しなくていい。※ 必ずaction.ymlでカスタムアクションを定義することになっているため。
        uses: ./.github/actions/cached-deps2
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & cache dependencies
        # カスタムアクションを使う際もusesを使う。
        # リポジトリ直下からアクションが記載されているファイル「action.yml」までのパスを指定する。
        # ./.github/actions/cached-deps までは指定するが、「action.yml」は指定しなくていい。※ 必ずaction.ymlでカスタムアクションを定義することになっているため。
        uses: ./.github/actions/cached-deps
      - name: Build website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: ./dist
      - name: Output contents
        run: ls
      - name: Deploy site
        run: echo "Deploying..."
  infomation:
    runs-on: ubuntu-latest
    # カスタムアクション(JavaScript)を使う時も同様に、
    # まずは、JSファイルを呼び出す「action.yml」までのパスを指定する。
    # リポジトリ直下からのパスを記載すること。
    steps:
      # ※　自分のリポジトリにカスタムアクションを定義している場合は、checkoutしなければカスタムアクションを取得できないので注意。
      - name: Get code
        uses: actions/checkout@v3
      - name: yarn install in deploy-s3-JavaScript Dir
        # node_modulesをignoreしているため、deploy-s3-JavaScriptに行ってからyarn installを実行す流必要がある。
        # yarn install した後は、リポジトリ直下のパスに戻ってくる。
        run: |
          cd ./.github/actions/deploy-s3-JavaScript
          yarn install
          cd ${{ github.workspace }}
          pwd

      - name: Run JS Custom Action
        uses: ./.github/actions/deploy-s3-JavaScript
